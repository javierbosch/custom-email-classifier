students-bounces@inf.ed.ac.uk
---------------
[Students] REMINDER TOMORROW: Talks L/SL in Computer Science	Education
---------------
The candidates for the position of Lecturer/Senior Lecturer Computer Science Education will present talks to the School tomorrow from 9am in 5.02 Bayes Centre.

 

All Informatics staff and students are invited to attend these talks.

 

9.00am: Fiona McNeill (host Alan Bundy) 

 

Biography: I am an Associate Professor of Computer Science at Heriot-Watt, and before that I was at Edinburgh for several years, first doing my PhD and then working as an RA.  As a long-standing member of the Mathematical Reasoning Group, my core research has been in data integration and communication, particularly during crises.  Throughout my career, I have had a strong interest in education, equality and diversity, particularly in Computer Science and STEM, both at university and school level.  I have carried out multiple research projects looking at topics ranging from how women can be better supported in CS departments in universities, to how effective outreach programmes are, to developing an app to help young people understand how their skills and interests to map to CS.  I have led large-scale outreach programmes across the country and been on boards and panels for various diversity and engagement projects.   I frequently engage with government, educational bodies and other policy makers on issues around education and diversity in Computer Science and STEM. 

 

Publications: http://www.macs.hw.ac.uk/~fm206/mcneill_publications.pdf <http://www.macs.hw.ac.uk/~fm206/mcneill_publications.pdf>  

 

Research talk:  Computer science education for everyone: why we should care about attracting people to CS and keeping them there 

In this talk, I will discuss why, at a time when uptake of CS is falling in schools, I believe it is vital that we attract the best minds to the subject by challenging stereotypes and broadening awareness of what the subject involves, and then keep them in the field by providing excellent, accessible education at all levels in environments that are positive for all demographics.   

 I will discuss the research I have done in this area, including large nation-wide projects such as the RSE Tapping all our Talents report, and focus particularly on the First Lego League in Scotland, a major outreach initiative that I devised and carried out over a five year period.  I will then briefly introduce the projects I am working on and developing at the moment, including looking into factors that are influencing subject choice in schools, and ways to create a more effective, collaborate approach to CS teaching in universities. 

 

9.45am: Tobias Kohn (host Kobi Gal) 

 

Biography: Currently a research associate at Cambridge, Tobias Kohn is studying the execution of dynamic programming languages on concurrent and distributed 

system. With research interests in compilers, interpreters, and education, he is particularly interested in how to make complex computing systems accessible through simple programming interfaces. As part of his PhD thesis, he developed an educational Python environment with enhanced error messages that has received widespread acclaim. After receiving his PhD from ETH, he briefly worked at Oxford on compilers for probabilistic programming before joining Cambridge. 

 

Publications: https://tobiaskohn.ch/index.php/research/publications/ <https://tobiaskohn.ch/index.php/research/publications/> 

https://dblp.uni-trier.de/pers/hd/k/Kohn:Tobias

https://scholar.google.co.uk/citations?user=L0DHzYYAAAAJ&hl=en&oi=ao   

 

Research talk:  Here's Your Mistake...: Finding and Reporting Programming Errors 

Programming error messages are notorious for being cryptic, vague, or even plain wrong in that they misidentify the actual error. This is particularly a problem for novice programmers, for whom the messages are an important form of feedback and guidance during their learning process. Improving error messages to be meaningful is thus key to successful programming education. Providing good error messages, however, is surprisingly hard. If we want to correctly identify an error, we have to take into account much more than just the violation of a grammar rule: the true error might be found at a completely different location. And while some errors might hint at deeper underlying misconceptions of the student, others are just mere spelling mistakes. But how do we find and identify the actual error, its location in the program code, or even its cause? And how should we report the error to the student? 

 

10.30am: Marjahan Begum (host Paul Patras) 

 

Biography: Dr Marjahan Begum is a Post-Doctoral Researcher in Copenhagen Business School in the Department of Management Society and Communications and Part-time teacher in Software Engineering in the IT University of Copenhagen. Her main current teaching activity is a support teacher for a Software Engineering course. She has taught in introductory programming in Copenhagen Business Academy and Copenhagen Business School previously.  She identifies herself as a learning scientist and is fascinated by how people learn and how an effective learning and teaching environments can be designed to promote learning and to motivate students.  She completed her PhD in Computer Science Education from the University of Nottingham. The focus of her PhD research is on behaviour and processes of novice programmers while they are programming.    She developed a self-reporting closed questionnaire-based instrument and a think-aloud method including a coding scheme for identifying processes and behaviour of novice programmers. She continues to develop this instrument and think-aloud method further to help our understanding of high and low performing novice programmers’ processes and behaviour. In addition to studying novice 

programmers, she is currently investigating how student software scrum teams resolve conflicts during software development processes using students’ reflective diaries.  She is currently embarking on a research project with Microsoft on knowledge management of software developers.  In addition to research in Computer Science Education and teaching in programming, Marjahan has also worked closely with academics across the disciplines (e.g. Business, Economics and Engineering) in the University of Nottingham, University of Manchester, Loughborough University and the IT University of Copenhagen. This work ranged from developing and facilitating a community of practice, a project where she created an environment for academics to cross-fertilizing ideas about innovative learning and teaching to engage students, redesigning the learning and teaching activities to incorporate employability skills, developing effective feedback practice, and using e-learning technologies to engage students in learning.  She is enthusiastic to work with other academics and to provide a sounding board as they reflect on their teaching methods. 

 

Publications: https://www.cbs.dk/en/research/departments-and-centres/department-ofmanagement-society-and-communication/staff/mbemsc <https://www.cbs.dk/en/research/departments-and-centres/department-ofmanagement-society-and-communication/staff/mbemsc>  

 

Research talk:  Reflections on supporting novices who are learning to program 

Learning programming requires complex problem-solving skills that are not used in other areas of life/work. Learning programming is also multidimensional learning activity because it requires 1) an understanding of the syntax and semantics of a new (programming) language; 2) learning and understanding the logic of fundamental programming concepts (condition, loops, methods etc.); and 3) applying these skills to solving complex problems. All of this takes time to absorb and learn, and many novice programmers find it difficult to understand the idea of program structure and designing a program. Despite decades of research, there are still challenges to teaching and learning programming.  In this talk, I will reflect on how teachers can help novice programmers in their learning journey. The talk will be informed by my research on novice programmers’ behaviour and processes, by my experience of working with academics in promoting engaging learning and teaching activities, by trends in research on novice programmers and by the development of my own programming skills. This will include reference to: the development of notional machine models in novice programmers; the role of cognitive load in programming; the importance of code comprehension and debugging skills; assessment for learning; self and peer assessment; collaborative learning (pair-programming/group project); and the scaffolding of learning.   

 

11.15am: Feedback session 

 

Teaching talks 

The candidates were given the below instructions:  

The presentation should be a 15 minute class aimed at 1st year undergraduates in Informatics as part of an introductory course in programming (in a language of your choice).  Assume that the students in the class do not necessarily have a background in computer science. You can decide which concept you want to teach, and the format of the session (e.g. problem solving activity/lecture/discussion).  The presentation will be attended by students and staff and there will be five minutes afterwards to ask questions about the presentation, including how the session was informed by recent research. It will take place in meeting room so there will be a projector. The audience members may have laptops and phones with them, but it is not a computer lab setting. 

 

11.45am Fiona McNeill 

 

12.05pm Tobias Kohn   

 

12.25pm Marjahan Begum 

 

12.45pm Feedback session

 

 

------

Samantha Inch

Staffing Support Manager

HR Office

Room 5.39

University of Edinburgh, Informatics Forum

10 Crichton St | Edinburgh | EH8 9AB

Tel:  +44 131 650 9006

 

The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.

 
